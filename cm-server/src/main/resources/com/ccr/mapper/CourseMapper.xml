<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccr.mapper.CourseMapper">

    <resultMap id="collegeMajorTreeResult" type="com.ccr.vo.CollegeMajorTreeVO">
        <id property="id" column="college_id"/>
        <result property="name" column="college_name"/>
        <collection property="children" ofType="com.ccr.vo.MajorTreeVO">
            <id property="id" column="major_id"/>
            <result property="collegeId" column="college_id"/>
            <result property="name" column="major_name"/>
        </collection>
    </resultMap>

    <resultMap id="detailResult" type="com.ccr.vo.CourseDetailVO">
        <id property="id" column="id"/>
        <result property="courseCode" column="course_code"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="theoryHours" column="theory_hours"/>
        <result property="practiceHours" column="practice_hours"/>
        <result property="totalHours" column="total_hours"/>
        <result property="courseType" column="course_type"/>
        <result property="assessmentType" column="assessment_type"/>
        <result property="status" column="status"/>
        <result property="selectionStartTime" column="selection_start_time"/>
        <result property="selectionEndTime" column="selection_end_time"/>
        <association property="courseTeachingVO" javaType="com.ccr.vo.CourseDetailVO" column="id" select="getCourseTeachingDetail"/>
    </resultMap>

    <resultMap id="getUserByIdResult" type="User">
        <id property="id" column="id"/>
        <result property="userType" column="user_type"/>
        <collection property="teacher" ofType="teacher">
            <id property="id" column="id"/>
        </collection>
    </resultMap>

    <insert id="addCourse" keyProperty="id" useGeneratedKeys="true">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseCode != null and courseCode != ''">course_code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="description != null and description != ''">description,</if>
            <if test="theoryHours != null">theory_hours,</if>
            <if test="practiceHours != null">practice_hours,</if>
            <if test="totalHours != null">total_hours,</if>
            <if test="courseType != null">course_type,</if>
            <if test="assessmentType != null">assessment_type,</if>
            <if test="status != null">status,</if>
            <if test="selectionStartTime != null">selection_start_time,</if>
            <if test="selectionEndTime != null">selection_end_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseCode != null and courseCode != ''">#{courseCode},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="description != null and description != ''">#{description},</if>
            <if test="theoryHours != null">#{theoryHours},</if>
            <if test="practiceHours != null">#{practiceHours},</if>
            <if test="totalHours != null">#{totalHours},</if>
            <if test="courseType != null">#{courseType},</if>
            <if test="assessmentType != null">#{assessmentType},</if>
            <if test="status != null">#{status},</if>
            <if test="selectionStartTime != null">#{selectionStartTime},</if>
            <if test="selectionEndTime != null">#{selectionEndTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
        </trim>
    </insert>
    <insert id="addCourseTeaching" useGeneratedKeys="true" keyProperty="id">
        insert into course_teaching
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">course_id,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="semester != null">semester,</if>
            <if test="classIds != null">class_ids,</if>
            <if test="maxStudentCount != null">max_student_count,</if>
            <if test="currentStudentCount != null">current_student_count,</if>
            <if test="scheduleInfo != null">schedule_info,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">#{courseId},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="semester != null">#{semester},</if>
            <if test="classIds != null">#{classIds},</if>
            <if test="maxStudentCount != null">#{maxStudentCount},</if>
            <if test="currentStudentCount != null">#{currentStudentCount},</if>
            <if test="scheduleInfo != null">#{scheduleInfo},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
        </trim>
    </insert>

    <insert id="saveCourseSelection" keyProperty="id" useGeneratedKeys="true">
        insert into course_selection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="courseTeachingId != null">course_teaching_id,</if>
            <if test="semester != null">semester,</if>
            <if test="courseId != null">course_id,</if>
            <if test="courseName != null">course_name,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="teacherName != null">teacher_name,</if>
            <if test="selectionTime != null">selection_time,</if>
            <if test="cancelTime != null">cancel_time,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="courseTeachingId != null">#{courseTeachingId},</if>
            <if test="semester != null">#{semester},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="courseName != null">#{courseName},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="teacherName != null">#{teacherName},</if>
            <if test="selectionTime != null">#{selectionTime},</if>
            <if test="cancelTime != null">#{cancelTime},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
        </trim>
    </insert>

    <update id="updateCourseTeaching">
        update course_teaching
        <set>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="semester != null">semester = #{semester},</if>
            <if test="classIds != null">class_ids = #{classIds},</if>
            <if test="maxStudentCount != null">max_student_count = #{maxStudentCount},</if>
            <if test="currentStudentCount != null">current_student_count = #{currentStudentCount},</if>
            <if test="scheduleInfo != null">schedule_info = #{scheduleInfo},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        where course_id = #{courseId} and is_deleted = 0
    </update>
    <update id="updateCourse">
        update course
        <set>
            <if test="courseCode != null">course_code = #{courseCode},</if>
            <if test="name != null">name = #{name},</if>
            <if test="description != null">description = #{description},</if>
            <if test="theoryHours != null">theory_hours = #{theoryHours},</if>
            <if test="practiceHours != null">practice_hours = #{practiceHours},</if>
            <if test="totalHours != null">total_hours = #{totalHours},</if>
            <if test="assessmentType != null">assessment_type = #{assessmentType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="selectionStartTime != null">selection_start_time = #{selectionStartTime},</if>
            <if test="selectionEndTime != null">selection_end_time = #{selectionEndTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        where id = #{id} and is_deleted = 0
    </update>
    <delete id="cancelCourseSelection">
        update course_selection
        set status = 2,cancel_time = #{cancelTime}
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
        and is_deleted = 0 and course_id in
        <foreach collection="courseIds" item="courseId" separator="," open="(" close=")">
            #{courseId}
        </foreach>
        and student_id = (select id from student where user_id = #{userId})
    </delete>

    <update id="deleteCourseSelectionByCourseId">
        update course_selection
        set is_deleted = 1
        where course_id = #{courseId}
    </update>

    <select id="pageQuery" resultType="com.ccr.vo.CoursePageVO">
        SELECT
        course.id, course.course_code, course.name, course.description, course.theory_hours, course.practice_hours,
        course.total_hours, course.course_type, course.assessment_type, course.status, course.selection_start_time,
        course.selection_end_time,
        course_teaching.current_student_count,course_teaching.max_student_count,course_teaching.class_ids,
        user.real_name as teacherName
        FROM course
        left join course_teaching on course.id = course_teaching.course_id
        left join teacher on course_teaching.teacher_id = teacher.id
        left join user on teacher.user_id = user.id
        <where>
            <if test="courseCode != null and courseCode != ''">
                AND course.course_code LIKE CONCAT('%', #{courseCode}, '%')
            </if>
            <if test="name != null and name != ''">
                AND course.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="courseType != null">
                AND course.course_type = #{courseType}
            </if>
            <if test="status != null">
                AND course.status = #{status}
            </if>
            AND course.is_deleted = 0
        </where>
        ORDER BY course.create_time DESC
    </select>

    <select id="listTeacherAccount" resultType="com.ccr.vo.UserWithTeacherInfoPageVO">
        select u.id,u.username,u.real_name,u.status,t.teacher_no,t.title,t.id as teacherId
        from user u left join teacher t on u.id = t.user_id
        <where>
            <if test="username != null and username != ''">AND u.username LIKE CONCAT('%', #{username}, '%')</if>
            <if test="realName != null and realName != ''">AND u.real_name LIKE CONCAT('%', #{realName}, '%')</if>
            <if test="teacherNo != null and teacherNo != ''">AND t.teacher_no LIKE CONCAT('%', #{teacherNo}, '%')</if>
            <if test="status != null">AND u.status = #{status}</if>
            and u.user_type = 2 and u.is_deleted = 0 and t.is_deleted = 0 and t.status = 1
        </where>
        order by u.create_time desc
    </select>

    <select id="collegeMajorTree" resultMap="collegeMajorTreeResult">
        select college.id       as college_id,
               college.name     as college_name,
               major.id         as major_id,
               major.college_id as college_id,
               major.name       as major_name
        from college
                 left join major on college.id = major.college_id
        where college.is_deleted = 0
          and major.is_deleted = 0
        order by college.id asc, major.id asc
    </select>

    <select id="listClasses" resultType="com.ccr.vo.ClassListPageVO">
        select
        class.id,
        class.name,
        class.grade,
        class.student_count,
        class.status,
        major.name as majorName,
        college.name as collegeName
        from class
        left join major on class.major_id = major.id
        left join college on major.college_id = college.id
        <where>
            <if test="name != null and name != ''">AND class.name LIKE CONCAT('%', #{name}, '%')</if>
            <if test="grade != null and grade != ''">AND class.grade like CONCAT('%', #{grade}, '%')</if>
            <if test="majorId != null">AND class.major_id = #{majorId}</if>
            <if test="collegeId != null">AND college.id = #{collegeId}</if>
        </where>
        order by class.id asc
    </select>

    <select id="getCourseTeachingById" resultType="com.ccr.entity.CourseTeaching">
        select course_teaching.id,
               course_teaching.teacher_id,
               course_teaching.semester,
               course_teaching.max_student_count,
               course_teaching.course_id,
               course_teaching.class_ids,
               course_teaching.current_student_count
        from course_teaching
        where course_id = #{courseId}
    </select>

    <select id="getTeacherById" resultType="com.ccr.entity.Teacher">
        select teacher_no, real_name
        from teacher
                 left join user on user.id = teacher.user_id
        where teacher.id = #{teacherId} and user.is_deleted = 0 and teacher.is_deleted = 0
    </select>

    <select id="getStudentIdsByClassIds" resultType="java.lang.Long">
        select id from student where class_id in
        <foreach item="item" index="index" collection="list" separator="," open="(" close=")">
            #{item}
        </foreach>
        and is_deleted = 0
    </select>

    <select id="detail" resultMap="detailResult">
        select id, course_code, name, description, theory_hours, practice_hours, total_hours, course_type, assessment_type, status, selection_start_time, selection_end_time
            from course
        where id = #{id} and is_deleted = 0
    </select>
    <select id="getCourseTeachingDetail" resultType="com.ccr.vo.CourseTeachingVO">
        select id, course_id, teacher_id, semester,max_student_count, current_student_count, schedule_info,(select group_concat(name separator ',') from class where find_in_set(id, course_teaching.class_ids) and is_deleted = 0) as className
        from course_teaching where course_id = #{id} and is_deleted = 0
    </select>

    <select id="getUserById" resultMap="getUserByIdResult">
        select user_type,teacher.id from user left join teacher on user.id = teacher.user_id where user.id = #{currentId} and user.is_deleted = 0
    </select>

    <select id="pageQueryByTeacher" resultType="com.ccr.vo.CoursePageVO">
        SELECT
        course.id, course.course_code, course.name, course.description, course.theory_hours, course.practice_hours,
        course.total_hours, course.course_type, course.assessment_type, course.status, course.selection_start_time,
        course.selection_end_time,
        course_teaching.current_student_count,course_teaching.max_student_count,course_teaching.class_ids,
        user.real_name as teacherName
        FROM course
        left join course_teaching on course.id = course_teaching.course_id
        left join teacher on course_teaching.teacher_id = teacher.id
        left join user on teacher.user_id = user.id
        <where>
            <if test="courseCode != null and courseCode != ''">
                AND course.course_code LIKE CONCAT('%', #{courseCode}, '%')
            </if>
            <if test="name != null and name != ''">
                AND course.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="courseType != null">
                AND course.course_type = #{courseType}
            </if>
            <if test="status != null">
                AND course.status = #{status}
            </if>
            AND course.is_deleted = 0 and course_teaching.teacher_id = (select id from teacher where user_id = #{userId})
        </where>
        ORDER BY course.create_time DESC
    </select>

    <select id="pageQueryByStudent" resultType="com.ccr.vo.StudentCoursePageVO">
        select course.id,
        course.course_code,
        course.name,
        course.course_type,
        course.assessment_type,
        course_teaching.schedule_info,
        user.real_name as teacherName,
        course_teaching.semester
        from course
        left join course_teaching on course.id = course_teaching.course_id
        left join teacher on course_teaching.teacher_id = teacher.id
        left join user on teacher.user_id = user.id
        <where>
            <if test="name != null and name != ''">
                AND course.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="courseType != null">
                AND course.course_type = #{courseType}
            </if>
            <if test="semester != null and semester != ''">AND course_teaching.semester like CONCAT('%', #{semester},
                '%')
            </if>
            and course.status = 1 and course_teaching.status = 1 and selection_end_time &gt;= #{now} and
            selection_start_time &lt;= #{now} and course_type != 1 and course.is_deleted = 0 and course_teaching.is_deleted = 0
        </where>
    </select>
    <select id="getAllActiveCourseSelectionCount" resultType="com.ccr.vo.CoursesNumberVO">
        select course.id, course_teaching.current_student_count, course_teaching.max_student_count
        from course
                 left join course_teaching on course.id = course_teaching.course_id
        <where>
            <if test=" now != null "> and course.selection_end_time  &gt;= #{now} </if>
            <if test=" now != null "> and course.selection_start_time &lt;= #{now} </if>
            and course_teaching.status = 1
            and course.is_deleted = 0
            and course_teaching.is_deleted = 0
            and course_type != 1
            and course.status = 1
        </where>
    </select>
    <select id="getStudentIdByUserId" resultType="java.lang.Long">
        select id from student where user_id = #{currentId}
    </select>

    <select id="getCourseSelectionByStudentAndCourse" resultType="com.ccr.entity.CourseSelection">
        select id,course_name from course_selection where student_id = #{studentId} and course_id = #{courseId} and status = 1 and is_deleted = 0
    </select>

    <select id="getFillCourseSelection" resultType="com.ccr.entity.CourseSelection">
        select course.name as courseName,course_teaching.id as courseTeachingId,course_teaching.teacher_id,user.real_name as teacherName,course_teaching.semester
        from course_teaching
                 left join course on course_teaching.course_id = course.id
                 left join teacher on course_teaching.teacher_id = teacher.id
                 left join user on teacher.user_id = user.id
        where course_teaching.course_id = #{courseId} and course.is_deleted = 0 and teacher.is_deleted = 0 and course_teaching.is_deleted = 0
    </select>
    <select id="getAllActiveCourseBySelectionTime" resultType="com.ccr.entity.Course">
        select course.id,course.name,course.selection_start_time, course.selection_end_time from course
        where course.selection_end_time  &gt;= #{now} and course.selection_start_time &lt;= #{now} and course.status = 1 and  course.is_deleted = 0
    </select>
    <select id="listSelectedCourse" resultType="com.ccr.vo.CourseSelectionVO">
        select
            course_selection.id,
            course_selection.course_id,
            course_selection.course_name,
            course_selection.teacher_name,
            course_selection.semester,
            course_selection.selection_time,
            course_selection.status
        from course_selection
        where
            student_id = (select id from student where user_id = #{currentId}) and status = 1 and is_deleted = 0
            and create_time &gt;= #{startTime} and create_time &lt;= #{endTime}
    </select>
    <select id="listCourse" resultType="com.ccr.vo.CourseListVO">
        select course.id, course.name
        from course
                 left join course_teaching on course.id = course_teaching.course_id
        where course_teaching.teacher_id = (select id from teacher where user_id = #{currentId})
          and course.status = 1
          and course_teaching.status = 1
          and course.is_deleted = 0
          and course_teaching.is_deleted = 0
        order by course.create_time desc
    </select>

    <select id="listCourseByStudent" resultType="com.ccr.vo.CourseListVO">
        select course.id, course.name
        from course
                 left join course_selection on course.id = course_selection.course_id
        where course_selection.student_id = (select id from student where user_id = #{currentId})
          and course.status = 1
          and course.is_deleted = 0
          and course_selection.is_deleted = 0
          and course_selection.status = 1
        order by course.create_time desc
    </select>

    <select id="listCourseByAdmin" resultType="com.ccr.vo.CourseListVO">
        select course.id, course.name
        from course
                 left join course_teaching on course.id = course_teaching.course_id
        where course.status = 1
          and course_teaching.status = 1
          and course.is_deleted = 0
          and course_teaching.is_deleted = 0
        order by course.create_time desc
    </select>

    <update id="deleteCourse">
        UPDATE course SET is_deleted = 1 WHERE id IN
        <foreach item="id" index="index" collection="ids" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteCourseTeaching">
        UPDATE course_teaching SET is_deleted = 1 WHERE course_id IN
        <foreach item="id" index="index" collection="courseIds" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteCourseSelection">
        UPDATE course_selection SET is_deleted = 1 WHERE course_id IN
        <foreach item="id" index="index" collection="courseIds" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
</mapper>