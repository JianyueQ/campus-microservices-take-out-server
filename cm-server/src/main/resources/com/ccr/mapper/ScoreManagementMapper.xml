<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccr.mapper.ScoreManagementMapper">

    <resultMap id="courseStudentTreeResult" type="com.ccr.vo.CourseStudentTreeVO">
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <collection property="children" ofType="com.ccr.vo.StudentTreeVO">
            <result property="studentId" column="student_id"/>
            <result property="studentName" column="student_name"/>
            <result property="studentNo" column="student_no"/>
        </collection>
    </resultMap>
    <insert id="addGrade">
        insert into grade
        (id, student_id, course_teaching_id, course_id, course_name, teacher_id, teacher_name, student_no, student_name,
         score, grade_level, assessment_type, semester, status, create_time, update_time, create_user, update_user,
         is_deleted)
            value
            (#{id}, #{studentId}, #{courseTeachingId}, #{courseId}, #{courseName}, #{teacherId}, #{teacherName},
             #{studentNo}, #{studentName}, #{score}, #{gradeLevel}, #{assessmentType}, #{semester}, #{status},
             #{createTime}, #{updateTime}, #{createUser}, #{updateUser}, 0)
    </insert>

    <update id="updateGrade">
        update grade
        set score           = #{score},
            grade_level     = #{gradeLevel},
            assessment_type = #{assessmentType},
            semester        = #{semester},
            update_time     = #{updateTime},
            update_user     = #{updateUser}
        where course_id = #{courseId}
          and student_id = #{studentId}
          and is_deleted = 0
    </update>

    <select id="courseStudentTree" resultMap="courseStudentTreeResult">
        select cs.course_id   as course_id,
               cs.course_name as course_name,
               s.id           as student_id,
               u.real_name    as student_name,
               s.student_no   as student_no
        from course_selection cs
                 left join student s on cs.student_id = s.id
                 left join user u on s.user_id = u.id
        where cs.status != 2
          and s.is_deleted = 0
          and u.is_deleted = 0
          and cs.is_deleted = 0
          and cs.teacher_id = (select id from teacher where teacher.user_id = #{currentid})
        order by cs.course_id, s.id
    </select>
    <select id="getGradeByCourseAndStudent" resultType="com.ccr.vo.GradeVO">
        select id,
               student_id,
               course_teaching_id,
               course_id,
               course_name,
               teacher_id,
               teacher_name,
               student_no,
               student_name,
               score,
               grade_level,
               assessment_type,
               semester,
               status
        from grade where course_id = #{courseId} and student_id = #{studentId} and is_deleted = 0
    </select>

    <select id="getCourseSelectionByCourseAndStudent" resultType="com.ccr.entity.CourseSelection">
        select course_teaching_id, teacher_id, teacher_name
        from course_selection
        where course_id = #{courseId}
          and student_id = #{studentId}
          and is_deleted = 0
          and status != 2
    </select>

    <select id="adminCourseStudentTree" resultMap="courseStudentTreeResult">
        select cs.course_id   as course_id,
               cs.course_name as course_name,
               s.id           as student_id,
               u.real_name    as student_name,
               s.student_no   as student_no
        from course_selection cs
                 left join student s on cs.student_id = s.id
                 left join user u on s.user_id = u.id
        where cs.status != 2
          and s.is_deleted = 0
          and u.is_deleted = 0
          and cs.is_deleted = 0
        order by cs.course_id, s.id
    </select>

    <select id="getStudentIdByCourseId" resultType="java.lang.Long">
        select id from student where user_id = #{currentId}
    </select>

</mapper>